2024-05-07 11:20:12,136 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 21936 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 11:20:12,138 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 11:20:12,685 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 11:20:12,737 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 47 ms. Found 1 MongoDB repository interface.
2024-05-07 11:20:13,097 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 11:20:13,109 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 11:20:13,111 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 11:20:13,111 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 11:20:13,168 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 11:20:13,169 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 991 ms
2024-05-07 11:20:13,384 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@50b93353, com.mongodb.Jep395RecordCodecProvider@44286963, com.mongodb.KotlinCodecProvider@c8f97a7]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 11:20:13,394 [cluster-ClusterId{value='6639c81da37926685241c730', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18125000}
2024-05-07 11:20:13,919 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 11:20:13,936 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 11:20:13,945 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.389 seconds (process running for 3.047)
2024-05-07 11:20:34,787 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 11:20:34,788 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 11:20:34,789 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 11:22:48,285 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 19132 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 11:22:48,287 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 11:22:48,803 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 11:22:48,855 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 48 ms. Found 1 MongoDB repository interface.
2024-05-07 11:22:49,197 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 11:22:49,205 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 11:22:49,207 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 11:22:49,207 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 11:22:49,252 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 11:22:49,252 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 920 ms
2024-05-07 11:22:49,443 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@62b3a2f6, com.mongodb.Jep395RecordCodecProvider@202898d7, com.mongodb.KotlinCodecProvider@317890ea]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 11:22:49,456 [cluster-ClusterId{value='6639c8b9d89a8b6d524e3052', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25188100}
2024-05-07 11:22:49,994 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 11:22:50,013 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 11:22:50,021 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.288 seconds (process running for 2.868)
2024-05-07 11:22:54,324 [http-nio-9091-exec-2] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 11:22:54,325 [http-nio-9091-exec-2] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 11:22:54,326 [http-nio-9091-exec-2] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 11:22:54,386 [http-nio-9091-exec-2] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "model" : "Samsung"} fields: Document{{}} sort: { "model" : "Samsung"} for class: class com.camsensehub.entity.Camera in collection: camera
2024-05-07 11:23:19,550 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 1744 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 11:23:19,551 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 11:23:20,087 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 11:23:20,143 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 53 ms. Found 1 MongoDB repository interface.
2024-05-07 11:23:20,502 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 11:23:20,511 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 11:23:20,513 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 11:23:20,513 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 11:23:20,557 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 11:23:20,557 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 956 ms
2024-05-07 11:23:20,745 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@2c719bd4, com.mongodb.Jep395RecordCodecProvider@53aa38be, com.mongodb.KotlinCodecProvider@37a0ec3c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 11:23:20,756 [cluster-ClusterId{value='6639c8d89b274e6c1a5bdab4', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25277500}
2024-05-07 11:23:21,298 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 11:23:21,317 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 11:23:21,325 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.283 seconds (process running for 2.899)
2024-05-07 11:23:26,085 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 11:23:26,085 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 11:23:26,086 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 11:23:26,156 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "model" : "Samsung"} fields: Document{{}} sort: { "model" : "Samsung"} for class: class com.camsensehub.entity.Camera in collection: camera
2024-05-07 11:32:51,776 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 28904 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 11:32:51,778 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 11:32:52,296 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 11:32:52,346 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 46 ms. Found 1 MongoDB repository interface.
2024-05-07 11:32:52,665 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 11:32:52,675 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 11:32:52,677 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 11:32:52,677 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 11:32:52,717 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 11:32:52,718 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 905 ms
2024-05-07 11:32:52,903 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@75d366c2, com.mongodb.Jep395RecordCodecProvider@8f40022, com.mongodb.KotlinCodecProvider@5232e3f1]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 11:32:52,918 [cluster-ClusterId{value='6639cb14524ae85114aceb5e', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29414600}
2024-05-07 11:32:53,452 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 11:32:53,468 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 11:32:53,477 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.324 seconds (process running for 2.935)
2024-05-07 11:33:01,277 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 11:33:01,277 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 11:33:01,278 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 11:33:01,326 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "model" : "Samsung"} fields: Document{{}} sort: { "model" : "Samsung"} for class: class com.camsensehub.entity.Camera in collection: camera
2024-05-07 11:33:02,922 [http-nio-9091-exec-2] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "model" : "Samsung"} fields: Document{{}} sort: { "model" : "Samsung"} for class: class com.camsensehub.entity.Camera in collection: camera
2024-05-07 11:34:09,824 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 29492 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 11:34:09,826 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 11:34:10,417 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 11:34:10,473 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 52 ms. Found 1 MongoDB repository interface.
2024-05-07 11:34:10,838 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 11:34:10,847 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 11:34:10,849 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 11:34:10,849 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 11:34:10,889 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 11:34:10,889 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 1019 ms
2024-05-07 11:34:11,087 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@c8f97a7, com.mongodb.Jep395RecordCodecProvider@2b736fee, com.mongodb.KotlinCodecProvider@3249e278]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 11:34:11,101 [cluster-ClusterId{value='6639cb63a334883fefa844a1', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26192600}
2024-05-07 11:34:11,602 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 11:34:11,621 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 11:34:11,629 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.323 seconds (process running for 2.906)
2024-05-07 11:34:16,521 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 11:34:16,521 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 11:34:16,522 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 11:34:16,591 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: camera
2024-05-07 11:34:17,595 [http-nio-9091-exec-5] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: camera
2024-05-07 11:35:06,893 [http-nio-9091-exec-3] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: camera
2024-05-07 11:35:55,849 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 28568 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 11:35:55,852 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 11:35:56,462 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 11:35:56,521 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 54 ms. Found 1 MongoDB repository interface.
2024-05-07 11:35:56,883 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 11:35:56,891 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 11:35:56,893 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 11:35:56,893 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 11:35:56,936 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 11:35:56,937 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 1046 ms
2024-05-07 11:35:57,134 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@590765c4, com.mongodb.Jep395RecordCodecProvider@19489b27, com.mongodb.KotlinCodecProvider@626d2016]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 11:35:57,144 [cluster-ClusterId{value='6639cbcdb6e1357dbfbca308', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25241500}
2024-05-07 11:35:57,671 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 11:35:57,689 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 11:35:57,697 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.467 seconds (process running for 3.152)
2024-05-07 11:36:02,591 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 11:36:02,591 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 11:36:02,592 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 11:36:02,637 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 11:36:02,714 [http-nio-9091-exec-1] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]] with root cause
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readValue(MappingMongoConverter.java:1665)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readIdValue(MappingMongoConverter.java:575)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readAndPopulateIdentifier(MappingMongoConverter.java:562)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:529)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy67.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 11:36:03,572 [http-nio-9091-exec-2] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 11:36:03,576 [http-nio-9091-exec-2] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]] with root cause
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readValue(MappingMongoConverter.java:1665)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readIdValue(MappingMongoConverter.java:575)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readAndPopulateIdentifier(MappingMongoConverter.java:562)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:529)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy67.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 11:36:04,398 [http-nio-9091-exec-3] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 11:36:04,403 [http-nio-9091-exec-3] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]] with root cause
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readValue(MappingMongoConverter.java:1665)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readIdValue(MappingMongoConverter.java:575)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readAndPopulateIdentifier(MappingMongoConverter.java:562)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:529)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy67.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 11:36:04,950 [http-nio-9091-exec-7] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 11:36:04,954 [http-nio-9091-exec-7] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]] with root cause
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readValue(MappingMongoConverter.java:1665)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readIdValue(MappingMongoConverter.java:575)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readAndPopulateIdentifier(MappingMongoConverter.java:562)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:529)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy67.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 11:36:06,201 [http-nio-9091-exec-4] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 11:36:06,205 [http-nio-9091-exec-4] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]] with root cause
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readValue(MappingMongoConverter.java:1665)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readIdValue(MappingMongoConverter.java:575)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readAndPopulateIdentifier(MappingMongoConverter.java:562)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:529)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy67.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 11:36:29,414 [http-nio-9091-exec-6] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 11:36:29,420 [http-nio-9091-exec-6] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]] with root cause
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [org.bson.types.ObjectId] to type [java.lang.Long]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readValue(MappingMongoConverter.java:1665)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readIdValue(MappingMongoConverter.java:575)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readAndPopulateIdentifier(MappingMongoConverter.java:562)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:529)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy67.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 11:36:55,365 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 28028 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 11:36:55,367 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 11:36:55,905 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 11:36:55,956 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 42 ms. Found 1 MongoDB repository interface.
2024-05-07 11:36:56,272 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 11:36:56,281 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 11:36:56,281 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 11:36:56,281 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 11:36:56,323 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 11:36:56,324 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 921 ms
2024-05-07 11:36:56,527 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3249e278, com.mongodb.Jep395RecordCodecProvider@35adf623, com.mongodb.KotlinCodecProvider@456f7d9e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 11:36:56,539 [cluster-ClusterId{value='6639cc0814a96267a7b2e9f9', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25421100}
2024-05-07 11:36:57,055 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 11:36:57,074 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 11:36:57,084 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.26 seconds (process running for 2.888)
2024-05-07 11:36:59,985 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 11:36:59,985 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 11:36:59,986 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 11:37:00,042 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 11:46:41,057 [http-nio-9091-exec-2] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 11:46:42,238 [http-nio-9091-exec-5] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 11:46:54,577 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 19104 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 11:46:54,579 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 11:46:55,213 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 11:46:55,266 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 48 ms. Found 1 MongoDB repository interface.
2024-05-07 11:46:55,648 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 11:46:55,657 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 11:46:55,659 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 11:46:55,659 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 11:46:55,708 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 11:46:55,708 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 1083 ms
2024-05-07 11:46:55,919 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5ae15, com.mongodb.Jep395RecordCodecProvider@577536e0, com.mongodb.KotlinCodecProvider@12219f6a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 11:46:55,933 [cluster-ClusterId{value='6639ce5f8b08501b76a81c33', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22653900}
2024-05-07 11:46:56,501 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 11:46:56,520 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 11:46:56,533 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.527 seconds (process running for 3.245)
2024-05-07 11:47:04,810 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 11:47:04,810 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 11:47:04,810 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 0 ms
2024-05-07 11:47:04,859 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:08:16,993 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 7536 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 12:08:16,995 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 12:08:17,612 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 12:08:17,659 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 43 ms. Found 1 MongoDB repository interface.
2024-05-07 12:08:17,991 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 12:08:17,999 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 12:08:18,000 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 12:08:18,001 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 12:08:18,045 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 12:08:18,045 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 998 ms
2024-05-07 12:08:18,231 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@75d366c2, com.mongodb.Jep395RecordCodecProvider@8f40022, com.mongodb.KotlinCodecProvider@5232e3f1]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 12:08:18,245 [cluster-ClusterId{value='6639d36253b4237bbd0003e4', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26603200}
2024-05-07 12:08:18,736 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 12:08:18,752 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 12:08:18,760 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.294 seconds (process running for 2.885)
2024-05-07 12:08:48,777 [http-nio-9091-exec-2] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 12:08:48,777 [http-nio-9091-exec-2] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 12:08:48,778 [http-nio-9091-exec-2] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 12:08:48,826 [http-nio-9091-exec-2] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:11:48,519 [http-nio-9091-exec-4] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:11:48,603 [http-nio-9091-exec-4] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.sql.Date] for value [2024-05-07T12:00:00Z]] with root cause
java.lang.IllegalArgumentException: null
	at java.sql/java.sql.Date.valueOf(Date.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.core.convert.support.ObjectToObjectConverter.convert(ObjectToObjectConverter.java:108)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:182)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1934)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:620)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:537)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy66.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 12:12:07,703 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 23412 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 12:12:07,705 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 12:12:08,294 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 12:12:08,339 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 40 ms. Found 1 MongoDB repository interface.
2024-05-07 12:12:08,673 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 12:12:08,682 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 12:12:08,684 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 12:12:08,685 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 12:12:08,734 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 12:12:08,734 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 991 ms
2024-05-07 12:12:08,924 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3c770db4, com.mongodb.Jep395RecordCodecProvider@3e046e39, com.mongodb.KotlinCodecProvider@61cda923]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 12:12:08,939 [cluster-ClusterId{value='6639d448479b270866d1d201', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29748700}
2024-05-07 12:12:09,486 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 12:12:09,502 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 12:12:09,512 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.387 seconds (process running for 3.044)
2024-05-07 12:13:32,336 [http-nio-9091-exec-2] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 12:13:32,336 [http-nio-9091-exec-2] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 12:13:32,337 [http-nio-9091-exec-2] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 12:13:32,385 [http-nio-9091-exec-2] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:13:32,472 [http-nio-9091-exec-2] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.sql.Date] for value [2024-05-07T12:00:00Z]] with root cause
java.lang.IllegalArgumentException: null
	at java.sql/java.sql.Date.valueOf(Date.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.core.convert.support.ObjectToObjectConverter.convert(ObjectToObjectConverter.java:108)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:182)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1934)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:620)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:537)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy66.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 12:14:12,300 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 29336 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 12:14:12,302 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 12:14:12,837 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 12:14:12,892 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 52 ms. Found 1 MongoDB repository interface.
2024-05-07 12:14:13,238 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 12:14:13,247 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 12:14:13,248 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 12:14:13,248 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 12:14:13,294 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 12:14:13,294 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 954 ms
2024-05-07 12:14:13,487 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6f25bf88, com.mongodb.Jep395RecordCodecProvider@42ea7565, com.mongodb.KotlinCodecProvider@7b5cc918]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 12:14:13,500 [cluster-ClusterId{value='6639d4c5a0530f69e9b8ef5f', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=24252800}
2024-05-07 12:14:13,987 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 12:14:14,007 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 12:14:14,015 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.22 seconds (process running for 2.854)
2024-05-07 12:14:17,562 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 12:14:17,562 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 12:14:17,563 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 12:14:17,603 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:15:40,186 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 28104 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 12:15:40,187 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 12:15:40,739 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 12:15:40,786 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 44 ms. Found 1 MongoDB repository interface.
2024-05-07 12:15:41,118 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 12:15:41,127 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 12:15:41,128 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 12:15:41,129 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 12:15:41,174 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 12:15:41,175 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 947 ms
2024-05-07 12:15:41,368 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4e22368c, com.mongodb.Jep395RecordCodecProvider@411cd156, com.mongodb.KotlinCodecProvider@3c770db4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 12:15:41,379 [cluster-ClusterId{value='6639d51d0df37368c50b2fb5', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25126000}
2024-05-07 12:15:41,864 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 12:15:41,882 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 12:15:41,891 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.263 seconds (process running for 2.873)
2024-05-07 12:15:48,575 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 12:15:48,575 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 12:15:48,577 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 2 ms
2024-05-07 12:15:48,626 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:15:48,707 [http-nio-9091-exec-1] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value [2024-05-07T12:00:00Z]] with root cause
java.lang.IllegalArgumentException: null
	at java.base/java.util.Date.parse(Date.java:617)
	at java.base/java.util.Date.<init>(Date.java:275)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.core.convert.support.ObjectToObjectConverter.convert(ObjectToObjectConverter.java:113)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:182)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1934)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:620)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:537)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy66.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 12:15:49,507 [http-nio-9091-exec-2] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:15:49,514 [http-nio-9091-exec-2] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value [2024-05-07T12:00:00Z]] with root cause
java.lang.IllegalArgumentException: null
	at java.base/java.util.Date.parse(Date.java:617)
	at java.base/java.util.Date.<init>(Date.java:275)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.core.convert.support.ObjectToObjectConverter.convert(ObjectToObjectConverter.java:113)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:182)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1934)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:620)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:537)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy66.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 12:16:18,891 [http-nio-9091-exec-3] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:16:18,898 [http-nio-9091-exec-3] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value [2024-05-07T12:00:00Z]] with root cause
java.lang.IllegalArgumentException: null
	at java.base/java.util.Date.parse(Date.java:617)
	at java.base/java.util.Date.<init>(Date.java:275)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.core.convert.support.ObjectToObjectConverter.convert(ObjectToObjectConverter.java:113)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:182)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1934)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:620)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:537)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy66.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 12:19:51,595 [http-nio-9091-exec-5] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:19:51,604 [http-nio-9091-exec-5] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value [2024-05-07 12:00:00]] with root cause
java.lang.IllegalArgumentException: null
	at java.base/java.util.Date.parse(Date.java:617)
	at java.base/java.util.Date.<init>(Date.java:275)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.core.convert.support.ObjectToObjectConverter.convert(ObjectToObjectConverter.java:113)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:182)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1934)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:620)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:537)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy66.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 12:19:52,414 [http-nio-9091-exec-6] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:19:52,425 [http-nio-9091-exec-6] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value [2024-05-07 12:00:00]] with root cause
java.lang.IllegalArgumentException: null
	at java.base/java.util.Date.parse(Date.java:617)
	at java.base/java.util.Date.<init>(Date.java:275)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.core.convert.support.ObjectToObjectConverter.convert(ObjectToObjectConverter.java:113)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:182)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1934)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:620)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:537)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy66.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 12:20:01,438 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 11532 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 12:20:01,451 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 12:20:02,201 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 12:20:02,252 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 47 ms. Found 1 MongoDB repository interface.
2024-05-07 12:20:02,598 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 12:20:02,607 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 12:20:02,609 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 12:20:02,610 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 12:20:02,655 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 12:20:02,658 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 1032 ms
2024-05-07 12:20:02,849 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4262fdeb, com.mongodb.Jep395RecordCodecProvider@5f0a2638, com.mongodb.KotlinCodecProvider@5382184b]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 12:20:02,864 [cluster-ClusterId{value='6639d62273fad143efd6a6b0', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=29030000}
2024-05-07 12:20:03,410 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 12:20:03,428 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 12:20:03,436 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.973 seconds (process running for 5.646)
2024-05-07 12:20:05,224 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 12:20:05,225 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 12:20:05,226 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 12:20:05,270 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 12:20:05,347 [http-nio-9091-exec-1] ERROR [[dispatcherServlet]] - [USER=""] - [COUNTER=""] - [REF=""] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [java.util.Date] for value [2024-05-07 12:00:00]] with root cause
java.lang.IllegalArgumentException: null
	at java.base/java.util.Date.parse(Date.java:617)
	at java.base/java.util.Date.<init>(Date.java:275)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.springframework.core.convert.support.ObjectToObjectConverter.convert(ObjectToObjectConverter.java:113)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:182)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1822)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1814)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1350)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1324)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2362)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2168)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1934)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readProperties(MappingMongoConverter.java:620)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.populateProperties(MappingMongoConverter.java:537)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:514)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:480)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:416)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:412)
	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:119)
	at org.springframework.data.mongodb.core.MongoTemplate$ReadDocumentCallback.doWith(MongoTemplate.java:3287)
	at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:2921)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2598)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:2577)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:866)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:402)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:144)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.findAll(SimpleMongoRepository.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy66.findAll(Unknown Source)
	at com.camsensehub.service.DetectorCameraServiceImpl.getAllCameraDetails(DetectorCameraServiceImpl.java:27)
	at com.camsensehub.api.controller.DetectorCameraController.getAllCameraDetails(DetectorCameraController.java:31)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-05-07 12:24:48,299 [http-nio-9091-exec-6] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:07:31,925 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 27456 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 13:07:31,926 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 13:07:32,400 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 13:07:32,443 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 40 ms. Found 1 MongoDB repository interface.
2024-05-07 13:07:32,729 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 13:07:32,736 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 13:07:32,737 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 13:07:32,737 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 13:07:32,775 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 13:07:32,775 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 813 ms
2024-05-07 13:07:32,920 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@422ad5e2, com.mongodb.Jep395RecordCodecProvider@62a54948, com.mongodb.KotlinCodecProvider@6048e26a]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 13:07:32,931 [cluster-ClusterId{value='6639e144b507926dbd6290df', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18547500}
2024-05-07 13:07:33,397 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 13:07:33,412 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 13:07:33,419 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 1.984 seconds (process running for 2.53)
2024-05-07 13:09:18,215 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 13:09:18,215 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 13:09:18,216 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 13:09:18,238 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getAllCameraDetails - Date: Tue May 07 13:09:18 PKT 2024
2024-05-07 13:09:18,240 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 13:09:18,251 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:09:18,328 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:09:18,329 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:09:18,329 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getAllCameraDetails - Date: Tue May 07 13:09:18 PKT 2024
2024-05-07 13:14:19,511 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 12536 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 13:14:19,513 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 13:14:19,988 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 13:14:20,032 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 41 ms. Found 1 MongoDB repository interface.
2024-05-07 13:14:20,333 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 13:14:20,342 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 13:14:20,343 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 13:14:20,343 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 13:14:20,386 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 13:14:20,386 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 835 ms
2024-05-07 13:14:20,534 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@456f7d9e, com.mongodb.Jep395RecordCodecProvider@75d366c2, com.mongodb.KotlinCodecProvider@8f40022]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 13:14:20,545 [cluster-ClusterId{value='6639e2dc174f847510c67f11', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18500000}
2024-05-07 13:14:21,069 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 13:14:21,085 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 13:14:21,092 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.103 seconds (process running for 2.813)
2024-05-07 13:15:46,153 [http-nio-9091-exec-3] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 13:15:46,153 [http-nio-9091-exec-3] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 13:15:46,154 [http-nio-9091-exec-3] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 13:15:46,213 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:15:46 PKT 2024
2024-05-07 13:15:46,216 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07T12:00:00Z,endDate=2024-05-07T12:00:00Z
2024-05-07 13:15:46,216 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C
2024-05-07 13:15:46,254 [http-nio-9091-exec-3] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : { "$numberLong" : "-100"}}, "$lt" : { "$date" : "2024-05-07T08:15:46.216Z"}}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : { "$numberLong" : "-100"}}, "$lt" : { "$date" : "2024-05-07T08:15:46.216Z"}}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:15:46,386 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:15:46,387 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:17:41,081 [http-nio-9091-exec-5] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:17:41 PKT 2024
2024-05-07 13:17:41,082 [http-nio-9091-exec-5] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07T12:00:00Z,endDate=2024-05-07T12:00:00Z
2024-05-07 13:17:41,082 [http-nio-9091-exec-5] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C
2024-05-07 13:17:41,083 [http-nio-9091-exec-5] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : { "$numberLong" : "-100"}}, "$lt" : { "$date" : "2024-05-07T08:17:41.082Z"}}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : { "$numberLong" : "-100"}}, "$lt" : { "$date" : "2024-05-07T08:17:41.082Z"}}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:17:41,087 [http-nio-9091-exec-5] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:17:41,088 [http-nio-9091-exec-5] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:17:46,733 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:17:46 PKT 2024
2024-05-07 13:17:46,733 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07T12:00:00Z,endDate=2024-05-07T12:00:00Z
2024-05-07 13:17:46,733 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C
2024-05-07 13:17:46,735 [http-nio-9091-exec-6] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : { "$numberLong" : "-100"}}, "$lt" : { "$date" : "2024-05-07T08:17:46.733Z"}}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : { "$numberLong" : "-100"}}, "$lt" : { "$date" : "2024-05-07T08:17:46.733Z"}}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:17:46,740 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:17:46,740 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:18:22,598 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 1172 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 13:18:22,599 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 13:18:23,058 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 13:18:23,100 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 38 ms. Found 1 MongoDB repository interface.
2024-05-07 13:18:23,399 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 13:18:23,406 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 13:18:23,407 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 13:18:23,407 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 13:18:23,443 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 13:18:23,444 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 813 ms
2024-05-07 13:18:23,588 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@62a54948, com.mongodb.Jep395RecordCodecProvider@6048e26a, com.mongodb.KotlinCodecProvider@50b93353]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 13:18:23,599 [cluster-ClusterId{value='6639e3cf33f82454afd1c183', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17777500}
2024-05-07 13:18:24,095 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 13:18:24,112 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 13:18:24,119 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.003 seconds (process running for 2.563)
2024-05-07 13:18:31,921 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 13:18:31,921 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 13:18:31,921 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 0 ms
2024-05-07 13:18:31,955 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:18:31 PKT 2024
2024-05-07 13:18:31,956 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07T12:00:00Z,endDate=2024-05-07T12:00:00Z
2024-05-07 13:18:31,956 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C
2024-05-07 13:18:31,975 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : "2021-05-07T12:00:00Z", "$lt" : "2024-05-07T12:00:00Z"}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : "2021-05-07T12:00:00Z", "$lt" : "2024-05-07T12:00:00Z"}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:18:32,023 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:18:32,029 [http-nio-9091-exec-1] ERROR [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - FAILED -> ResponseCode: 60, ResponseDesc:Camera Details not found
2024-05-07 13:19:01,913 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:19:01 PKT 2024
2024-05-07 13:19:01,914 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07 12:00:00,endDate=2024-05-07 12:00:00
2024-05-07 13:19:01,914 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C
2024-05-07 13:19:01,915 [http-nio-9091-exec-3] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : "2021-05-07 12:00:00", "$lt" : "2024-05-07 12:00:00"}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : "2021-05-07 12:00:00", "$lt" : "2024-05-07 12:00:00"}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:19:01,918 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:19:01,918 [http-nio-9091-exec-3] ERROR [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - FAILED -> ResponseCode: 60, ResponseDesc:Camera Details not found
2024-05-07 13:20:22,752 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:20:22 PKT 2024
2024-05-07 13:20:22,752 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07 12:00:00,endDate=2024-05-07 12:00:00
2024-05-07 13:20:22,752 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C
2024-05-07 13:20:22,753 [http-nio-9091-exec-6] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : "2021-05-07 12:00:00", "$lt" : "2024-05-07 12:00:00"}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : "2021-05-07 12:00:00", "$lt" : "2024-05-07 12:00:00"}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:20:22,756 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:20:22,756 [http-nio-9091-exec-6] ERROR [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - FAILED -> ResponseCode: 60, ResponseDesc:Camera Details not found
2024-05-07 13:20:31,021 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 18876 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 13:20:31,023 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 13:20:31,503 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 13:20:31,547 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 41 ms. Found 1 MongoDB repository interface.
2024-05-07 13:20:31,869 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 13:20:31,878 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 13:20:31,879 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 13:20:31,880 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 13:20:31,923 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 13:20:31,923 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 860 ms
2024-05-07 13:20:32,106 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@317890ea, com.mongodb.Jep395RecordCodecProvider@2c719bd4, com.mongodb.KotlinCodecProvider@53aa38be]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 13:20:32,120 [cluster-ClusterId{value='6639e4509ceef83cd72bae0f', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=25812000}
2024-05-07 13:20:32,686 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 13:20:32,703 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 13:20:32,713 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.196 seconds (process running for 2.78)
2024-05-07 13:21:49,238 [http-nio-9091-exec-2] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 13:21:49,238 [http-nio-9091-exec-2] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 13:21:49,240 [http-nio-9091-exec-2] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 2 ms
2024-05-07 13:21:49,274 [http-nio-9091-exec-2] WARN  [DefaultHandlerExceptionResolver] - [USER=""] - [COUNTER=""] - [REF=""] - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.util.Date] for value [2021-05-07 12:00:00]]
2024-05-07 13:21:59,774 [http-nio-9091-exec-4] WARN  [DefaultHandlerExceptionResolver] - [USER=""] - [COUNTER=""] - [REF=""] - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.util.Date'; Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam java.util.Date] for value [2021-05-07 12:00:00]]
2024-05-07 13:27:03,989 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 20424 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 13:27:03,991 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 13:27:04,508 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 13:27:04,550 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 35 ms. Found 1 MongoDB repository interface.
2024-05-07 13:27:04,844 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 13:27:04,852 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 13:27:04,854 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 13:27:04,854 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 13:27:04,892 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 13:27:04,892 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 863 ms
2024-05-07 13:27:05,046 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@53747c4a, com.mongodb.Jep395RecordCodecProvider@64b0d1fa, com.mongodb.KotlinCodecProvider@f2276c9]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 13:27:05,056 [cluster-ClusterId{value='6639e5d8a76f8046a6006b5f', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18802500}
2024-05-07 13:27:05,580 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 13:27:05,594 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 13:27:05,601 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.298 seconds (process running for 2.94)
2024-05-07 13:27:13,110 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 13:27:13,110 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 13:27:13,111 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 13:27:13,143 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:27:13 PKT 2024
2024-05-07 13:27:13,144 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07 12:00:00,endDate=2024-05-07 12:00:00
2024-05-07 13:27:13,147 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C
2024-05-07 13:27:13,167 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : "2021-05-07T07:00:00Z"}, "$lt" : { "$date" : "2024-05-07T07:00:00Z"}}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : "2021-05-07T07:00:00Z"}, "$lt" : { "$date" : "2024-05-07T07:00:00Z"}}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:27:13,250 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:27:13,251 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:28:02,845 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getAllCameraDetails - Date: Tue May 07 13:28:02 PKT 2024
2024-05-07 13:28:02,845 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 13:28:02,854 [http-nio-9091-exec-3] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:28:02,861 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:28:02,861 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:28:02,861 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getAllCameraDetails - Date: Tue May 07 13:28:02 PKT 2024
2024-05-07 13:29:16,640 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getAllCameraDetails - Date: Tue May 07 13:29:16 PKT 2024
2024-05-07 13:29:16,640 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 13:29:16,640 [http-nio-9091-exec-6] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:29:16,647 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:29:16,647 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:29:16,647 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getAllCameraDetails - Date: Tue May 07 13:29:16 PKT 2024
2024-05-07 13:29:24,056 [http-nio-9091-exec-7] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:29:24 PKT 2024
2024-05-07 13:29:24,056 [http-nio-9091-exec-7] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07 12:00:00,endDate=2024-05-07 12:00:00
2024-05-07 13:29:24,056 [http-nio-9091-exec-7] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C
2024-05-07 13:29:24,057 [http-nio-9091-exec-7] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : "2021-05-07T07:00:00Z"}, "$lt" : { "$date" : "2024-05-07T07:00:00Z"}}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : "2021-05-07T07:00:00Z"}, "$lt" : { "$date" : "2024-05-07T07:00:00Z"}}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:29:24,060 [http-nio-9091-exec-7] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:29:24,060 [http-nio-9091-exec-7] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:35:29,216 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 4404 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 13:35:29,217 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 13:35:29,685 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 13:35:29,735 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 40 ms. Found 1 MongoDB repository interface.
2024-05-07 13:35:30,058 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 13:35:30,067 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 13:35:30,068 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 13:35:30,068 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 13:35:30,110 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 13:35:30,110 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 859 ms
2024-05-07 13:35:30,275 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3ba1308d, com.mongodb.Jep395RecordCodecProvider@5a08b084, com.mongodb.KotlinCodecProvider@235c997d]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 13:35:30,296 [cluster-ClusterId{value='6639e7d258db434f946b5fa5', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=26888600}
2024-05-07 13:35:30,817 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 13:35:30,831 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 13:35:30,838 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.154 seconds (process running for 2.805)
2024-05-07 13:36:19,640 [http-nio-9091-exec-4] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 13:36:19,641 [http-nio-9091-exec-4] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 13:36:19,643 [http-nio-9091-exec-4] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 2 ms
2024-05-07 13:36:19,695 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - findCameraByOwner - Date: Tue May 07 13:36:19 PKT 2024
2024-05-07 13:36:19,696 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 13:36:19,728 [http-nio-9091-exec-4] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "owner" : "Security Department"} fields: Document{{}} sort: { "owner" : "Security Department"} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:36:19,825 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:36:19,826 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:36:19,826 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - findCameraByOwner - Date: Tue May 07 13:36:19 PKT 2024
2024-05-07 13:39:27,770 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 6780 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 13:39:27,772 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 13:39:28,296 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 13:39:28,339 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 39 ms. Found 1 MongoDB repository interface.
2024-05-07 13:39:28,629 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 13:39:28,636 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 13:39:28,638 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 13:39:28,638 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 13:39:28,673 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 13:39:28,674 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 863 ms
2024-05-07 13:39:28,819 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@c8f97a7, com.mongodb.Jep395RecordCodecProvider@2b736fee, com.mongodb.KotlinCodecProvider@3249e278]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 13:39:28,830 [cluster-ClusterId{value='6639e8c0c9697471a1832c26', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17345000}
2024-05-07 13:39:29,271 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 13:39:29,285 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 13:39:29,292 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.049 seconds (process running for 2.62)
2024-05-07 13:39:33,438 [http-nio-9091-exec-2] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 13:39:33,438 [http-nio-9091-exec-2] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 13:39:33,439 [http-nio-9091-exec-2] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 1 ms
2024-05-07 13:39:33,465 [http-nio-9091-exec-2] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getAllCameraDetails - Date: Tue May 07 13:39:33 PKT 2024
2024-05-07 13:39:33,466 [http-nio-9091-exec-2] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 13:39:33,480 [http-nio-9091-exec-2] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:39:33,566 [http-nio-9091-exec-2] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:39:33,567 [http-nio-9091-exec-2] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:39:33,567 [http-nio-9091-exec-2] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getAllCameraDetails - Date: Tue May 07 13:39:33 PKT 2024
2024-05-07 13:39:35,460 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:39:35 PKT 2024
2024-05-07 13:39:35,461 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07 12:00:00,endDate=2024-05-07 12:00:00
2024-05-07 13:39:35,463 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C
2024-05-07 13:39:35,486 [http-nio-9091-exec-3] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gte" : { "$date" : "2021-05-07T07:00:00Z"}, "$lte" : { "$date" : "2024-05-07T07:00:00Z"}}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gte" : { "$date" : "2021-05-07T07:00:00Z"}, "$lte" : { "$date" : "2024-05-07T07:00:00Z"}}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:39:35,489 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:39:35,489 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:39:35,490 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:39:35 PKT 2024
2024-05-07 13:42:17,805 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:42:17 PKT 2024
2024-05-07 13:42:17,806 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07 12:00:00,endDate=2025-05-07 12:00:00
2024-05-07 13:42:17,806 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C
2024-05-07 13:42:17,810 [http-nio-9091-exec-6] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gte" : { "$date" : "2021-05-07T07:00:00Z"}, "$lte" : { "$date" : "2025-05-07T07:00:00Z"}}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gte" : { "$date" : "2021-05-07T07:00:00Z"}, "$lte" : { "$date" : "2025-05-07T07:00:00Z"}}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:42:17,814 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:42:17,814 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:42:17,814 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:42:17 PKT 2024
2024-05-07 13:42:36,887 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 8788 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 13:42:36,888 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 13:42:37,382 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 13:42:37,425 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 39 ms. Found 1 MongoDB repository interface.
2024-05-07 13:42:37,709 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 13:42:37,716 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 13:42:37,717 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 13:42:37,717 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 13:42:37,753 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 13:42:37,754 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 834 ms
2024-05-07 13:42:37,896 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@456f7d9e, com.mongodb.Jep395RecordCodecProvider@75d366c2, com.mongodb.KotlinCodecProvider@8f40022]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 13:42:37,906 [cluster-ClusterId{value='6639e97d2ae6dc49821db712', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=17867600}
2024-05-07 13:42:38,361 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 13:42:38,376 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 13:42:38,383 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 1.995 seconds (process running for 2.558)
2024-05-07 13:42:41,283 [http-nio-9091-exec-3] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 13:42:41,283 [http-nio-9091-exec-3] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 13:42:41,284 [http-nio-9091-exec-3] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 0 ms
2024-05-07 13:42:41,319 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:42:41 PKT 2024
2024-05-07 13:42:41,320 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07 12:00:00,endDate=2025-05-07 12:00:00
2024-05-07 13:42:41,321 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C start
2024-05-07 13:42:41,344 [http-nio-9091-exec-3] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : "2021-05-07T07:00:00Z"}, "$lt" : { "$date" : "2025-05-07T07:00:00Z"}}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : "2021-05-07T07:00:00Z"}, "$lt" : { "$date" : "2025-05-07T07:00:00Z"}}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:42:41,448 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:42:41,449 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:42:41,449 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 13:42:41 PKT 2024
2024-05-07 13:47:02,527 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 21144 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 13:47:02,529 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 13:47:03,021 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 13:47:03,066 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 41 ms. Found 1 MongoDB repository interface.
2024-05-07 13:47:03,355 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 13:47:03,362 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 13:47:03,364 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 13:47:03,364 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 13:47:03,418 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 13:47:03,419 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 851 ms
2024-05-07 13:47:03,569 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5d7911d5, com.mongodb.Jep395RecordCodecProvider@3ba1308d, com.mongodb.KotlinCodecProvider@5a08b084]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 13:47:03,580 [cluster-ClusterId{value='6639ea872a94e2726b1fe4d0', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=18796500}
2024-05-07 13:47:04,031 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 13:47:04,045 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 13:47:04,052 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.077 seconds (process running for 2.754)
2024-05-07 13:47:08,611 [http-nio-9091-exec-3] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 13:47:08,612 [http-nio-9091-exec-3] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 13:47:08,612 [http-nio-9091-exec-3] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 0 ms
2024-05-07 13:47:08,635 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - findFireDetectorCameraDetails - Date: Tue May 07 13:47:08 PKT 2024
2024-05-07 13:47:08,637 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 13:47:08,656 [http-nio-9091-exec-3] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "fireDetection" : true} fields: Document{{}} sort: { "fireDetection" : true} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 13:47:08,733 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 13:47:08,733 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 13:47:08,733 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - findFireDetectorCameraDetails - Date: Tue May 07 13:47:08 PKT 2024
2024-05-07 14:00:38,535 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 27948 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 14:00:38,537 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 14:00:39,066 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 14:00:39,104 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 35 ms. Found 1 MongoDB repository interface.
2024-05-07 14:00:39,414 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 14:00:39,423 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 14:00:39,425 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 14:00:39,425 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 14:00:39,469 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 14:00:39,469 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 900 ms
2024-05-07 14:00:39,620 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6b2dd3df, com.mongodb.Jep395RecordCodecProvider@4db77402, com.mongodb.KotlinCodecProvider@73c48264]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 14:00:39,631 [cluster-ClusterId{value='6639edb7aea1c35a34d6a138', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=19814200}
2024-05-07 14:00:40,136 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 14:00:40,150 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 14:00:40,158 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 2.138 seconds (process running for 2.85)
2024-05-07 14:00:46,606 [http-nio-9091-exec-6] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 14:00:46,607 [http-nio-9091-exec-6] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 14:00:46,607 [http-nio-9091-exec-6] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 0 ms
2024-05-07 14:00:46,646 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 14:00:46 PKT 2024
2024-05-07 14:00:46,647 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07 12:00:00,endDate=2025-05-07 12:00:00
2024-05-07 14:00:46,648 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C start
2024-05-07 14:00:46,675 [http-nio-9091-exec-6] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : "2021-05-07T07:00:00Z"}, "$lt" : { "$date" : "2025-05-07T07:00:00Z"}}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : "2021-05-07T07:00:00Z"}, "$lt" : { "$date" : "2025-05-07T07:00:00Z"}}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 14:00:46,757 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 14:00:46,758 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 14:00:46,759 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 14:00:46 PKT 2024
2024-05-07 14:00:55,067 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getAllCameraDetails - Date: Tue May 07 14:00:55 PKT 2024
2024-05-07 14:00:55,067 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 14:00:55,073 [http-nio-9091-exec-3] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 14:00:55,078 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 14:00:55,078 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 14:00:55,078 [http-nio-9091-exec-3] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getAllCameraDetails - Date: Tue May 07 14:00:55 PKT 2024
2024-05-07 14:00:58,352 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - findCameraByOwner - Date: Tue May 07 14:00:58 PKT 2024
2024-05-07 14:00:58,352 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 14:00:58,353 [http-nio-9091-exec-4] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "owner" : "Security Department"} fields: Document{{}} sort: { "owner" : "Security Department"} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 14:00:58,359 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 14:00:58,359 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 14:00:58,359 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - findCameraByOwner - Date: Tue May 07 14:00:58 PKT 2024
2024-05-07 14:01:01,434 [http-nio-9091-exec-9] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - findFireDetectorCameraDetails - Date: Tue May 07 14:01:01 PKT 2024
2024-05-07 14:01:01,435 [http-nio-9091-exec-9] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 14:01:01,435 [http-nio-9091-exec-9] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "fireDetection" : true} fields: Document{{}} sort: { "fireDetection" : true} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 14:01:01,443 [http-nio-9091-exec-9] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 14:01:01,443 [http-nio-9091-exec-9] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 14:01:01,443 [http-nio-9091-exec-9] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - findFireDetectorCameraDetails - Date: Tue May 07 14:01:01 PKT 2024
2024-05-07 14:02:14,376 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Starting CamSenseHubApplication using Java 17.0.9 with PID 23652 (C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub\target\classes started by MutaherAffan in C:\Users\MutaherAffan\Downloads\cam-sense-hub\cam-sense-hub)
2024-05-07 14:02:14,379 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - No active profile set, falling back to 1 default profile: "default"
2024-05-07 14:02:15,135 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2024-05-07 14:02:15,194 [main] INFO  [RepositoryConfigurationDelegate] - [USER=""] - [COUNTER=""] - [REF=""] - Finished Spring Data repository scanning in 53 ms. Found 1 MongoDB repository interface.
2024-05-07 14:02:15,666 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat initialized with port 9091 (http)
2024-05-07 14:02:15,681 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing ProtocolHandler ["http-nio-9091"]
2024-05-07 14:02:15,685 [main] INFO  [StandardService] - [USER=""] - [COUNTER=""] - [REF=""] - Starting service [Tomcat]
2024-05-07 14:02:15,686 [main] INFO  [StandardEngine] - [USER=""] - [COUNTER=""] - [REF=""] - Starting Servlet engine: [Apache Tomcat/10.1.20]
2024-05-07 14:02:15,742 [main] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring embedded WebApplicationContext
2024-05-07 14:02:15,743 [main] INFO  [ServletWebServerApplicationContext] - [USER=""] - [COUNTER=""] - [REF=""] - Root WebApplicationContext: initialization completed in 1313 ms
2024-05-07 14:02:15,959 [main] INFO  [client] - [USER=""] - [COUNTER=""] - [REF=""] - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./17.0.9+8-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1b7f06c7, com.mongodb.Jep395RecordCodecProvider@151732fb, com.mongodb.KotlinCodecProvider@729c8063]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2024-05-07 14:02:15,972 [cluster-ClusterId{value='6639ee17dfe01938111e6d5c', description='null'}-localhost:27017] INFO  [cluster] - [USER=""] - [COUNTER=""] - [REF=""] - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=17, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=23786900}
2024-05-07 14:02:16,563 [main] INFO  [Http11NioProtocol] - [USER=""] - [COUNTER=""] - [REF=""] - Starting ProtocolHandler ["http-nio-9091"]
2024-05-07 14:02:16,581 [main] INFO  [TomcatWebServer] - [USER=""] - [COUNTER=""] - [REF=""] - Tomcat started on port 9091 (http) with context path ''
2024-05-07 14:02:16,591 [main] INFO  [CamSenseHubApplication] - [USER=""] - [COUNTER=""] - [REF=""] - Started CamSenseHubApplication in 3.022 seconds (process running for 3.709)
2024-05-07 14:02:19,450 [http-nio-9091-exec-1] INFO  [[/]] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-05-07 14:02:19,451 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Initializing Servlet 'dispatcherServlet'
2024-05-07 14:02:19,451 [http-nio-9091-exec-1] INFO  [DispatcherServlet] - [USER=""] - [COUNTER=""] - [REF=""] - Completed initialization in 0 ms
2024-05-07 14:02:19,498 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 14:02:19 PKT 2024
2024-05-07 14:02:19,500 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - Request Params: location=Parking Lot C,startDate=2021-05-07 12:00:00,endDate=2025-05-07 12:00:00
2024-05-07 14:02:19,501 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails against location: Parking Lot C start
2024-05-07 14:02:19,530 [http-nio-9091-exec-1] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : "2021-05-07T07:00:00Z"}, "$lt" : { "$date" : "2025-05-07T07:00:00Z"}}} fields: Document{{}} sort: { "location" : "Parking Lot C", "stampDate" : { "$gt" : { "$date" : "2021-05-07T07:00:00Z"}, "$lt" : { "$date" : "2025-05-07T07:00:00Z"}}} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 14:02:19,619 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 14:02:19,619 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 14:02:19,619 [http-nio-9091-exec-1] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getCameraDetailsByLocationAndStampDateBetween - Date: Tue May 07 14:02:19 PKT 2024
2024-05-07 14:02:21,752 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - findCameraByOwner - Date: Tue May 07 14:02:21 PKT 2024
2024-05-07 14:02:21,752 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 14:02:21,753 [http-nio-9091-exec-4] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "owner" : "Security Department"} fields: Document{{}} sort: { "owner" : "Security Department"} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 14:02:21,758 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 14:02:21,758 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 14:02:21,758 [http-nio-9091-exec-4] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - findCameraByOwner - Date: Tue May 07 14:02:21 PKT 2024
2024-05-07 14:02:23,203 [http-nio-9091-exec-2] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - findFireDetectorCameraDetails - Date: Tue May 07 14:02:23 PKT 2024
2024-05-07 14:02:23,203 [http-nio-9091-exec-2] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 14:02:23,206 [http-nio-9091-exec-2] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "fireDetection" : true} fields: Document{{}} sort: { "fireDetection" : true} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 14:02:23,210 [http-nio-9091-exec-2] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 14:02:23,210 [http-nio-9091-exec-2] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 14:02:23,210 [http-nio-9091-exec-2] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - findFireDetectorCameraDetails - Date: Tue May 07 14:02:23 PKT 2024
2024-05-07 14:03:20,709 [http-nio-9091-exec-5] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - getAllCameraDetails - Date: Tue May 07 14:03:20 PKT 2024
2024-05-07 14:03:20,710 [http-nio-9091-exec-5] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 14:03:20,714 [http-nio-9091-exec-5] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: {} fields: Document{{}} sort: null for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 14:03:20,718 [http-nio-9091-exec-5] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 14:03:20,719 [http-nio-9091-exec-5] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 14:03:20,719 [http-nio-9091-exec-5] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - getAllCameraDetails - Date: Tue May 07 14:03:20 PKT 2024
2024-05-07 14:03:43,097 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - findCameraByOwner - Date: Tue May 07 14:03:43 PKT 2024
2024-05-07 14:03:43,097 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 14:03:43,098 [http-nio-9091-exec-6] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "owner" : "Security Department"} fields: Document{{}} sort: { "owner" : "Security Department"} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 14:03:43,105 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 14:03:43,105 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 14:03:43,105 [http-nio-9091-exec-6] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - findCameraByOwner - Date: Tue May 07 14:03:43 PKT 2024
2024-05-07 14:04:06,350 [http-nio-9091-exec-7] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - IN - findFireDetectorCameraDetails - Date: Tue May 07 14:04:06 PKT 2024
2024-05-07 14:04:06,350 [http-nio-9091-exec-7] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB start
2024-05-07 14:04:06,353 [http-nio-9091-exec-7] DEBUG [MongoTemplate] - [USER=""] - [COUNTER=""] - [REF=""] - find using query: { "fireDetection" : true} fields: Document{{}} sort: { "fireDetection" : true} for class: class com.camsensehub.entity.Camera in collection: Camera
2024-05-07 14:04:06,359 [http-nio-9091-exec-7] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - fetching cameraDetails from DB end
2024-05-07 14:04:06,359 [http-nio-9091-exec-7] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - SUCCESS -> ResponseCode: 00, ResponseDesc:Processed OK
2024-05-07 14:04:06,359 [http-nio-9091-exec-7] INFO  [DetectorCameraServiceImpl] - [USER=""] - [COUNTER=""] - [REF=""] - OUT - findFireDetectorCameraDetails - Date: Tue May 07 14:04:06 PKT 2024
